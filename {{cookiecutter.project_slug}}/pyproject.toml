{%- set license_classifiers = {
    'MIT': 'License :: OSI Approved :: MIT License',
    'BSD-3-Clause': 'License :: OSI Approved :: BSD License',
    'ISC': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache-2.0': 'License :: OSI Approved :: Apache Software License',
    'GPL-3.0-only': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} -%}
[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
description = "{{ cookiecutter.project_short_description }}."
authors = ["{{ cookiecutter.full_name.replace('\"', '\\\"') }} <{{ cookiecutter.email }}>"]
readme = "README.md"
{%- if cookiecutter.open_source_license in license_classifiers %}
license =  "{{ cookiecutter.open_source_license }}"
{%- endif %}
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
{%- if cookiecutter.open_source_license in license_classifiers %}
    '{{ license_classifiers[cookiecutter.open_source_license] }}',
{%- endif %}
    'Natural Language :: English',
    'Programming Language :: Python :: 3.10',
]
packages = [
    { include = "{{ cookiecutter.pkg_name }}", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.10"
{%- if cookiecutter.newest_deps == 'n' %}
    {% if cookiecutter.command_line_interface|lower == 'click' -%}
click = "^8.1.3"
    {% endif -%}

[tool.poetry.group.dev.dependencies]
isort = "^5.10.1"
black = "^22.8.0"
mypy = "^0.971"
pre-commit = "^2.20.0"
flake8 = "^5.0.4"
bump2version = "^1.0.1"
tox = "^3.25.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.1.3"
pytest-cov = "^3.0.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
black = "^22.8.0"
mkdocs = "^1.3.1"
mkdocs-include-markdown-plugin = "^3.6.1"
mkdocs-material = "^8.3.9"
mkdocstrings = { version = "^0.19.0", extras = ["python"] }
mkdocs-material-extensions = "^1.0.3"

[tool.poetry.group.publish]
optional = true

[tool.poetry.group.publish.dependencies]
twine = "^4.0.1"

{%- endif %}


{% if cookiecutter.command_line_interface|lower == 'click' -%}
[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = '{{ cookiecutter.pkg_name }}.cli:run_cli'

{% endif -%}
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--basetemp=testtemp"

[tool.coverage.run]
omit = ["*/test/*", "**/conftest.py"]

[tool.coverage.report]
omit = ["*/test/*"]
exclude_lines = [
    "pragma: no cover",
    "@abstractmethod",
    "@abc.abstractmethod",
    "def __repr__",
    "if .*DEBUG",
    "raise AssertionError",
    "raise NotImplementedError"
    ]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
known_typing="typing"
sections= ["FUTURE","STDLIB","FIRSTPARTY","THIRDPARTY","LOCALFOLDER","TYPING"]
# skip files
#skip_glob = docs/conf.py

{%- if cookiecutter.use_mypy == 'y' %}
[tool.mypy]
ignore_missing_imports = true
warn_unreachable = true
pretty = true
show_column_numbers = true
{%- endif %}

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"
